version: '3'
services:
  service:
    container_name: service
    build: app
    expose:
      - "8000"
    env_file:
      - ./.env
    depends_on:
      - theatre-db
    volumes:
      - static_files:/opt/app/static

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - static_files:/home/app/static:ro
    depends_on:
      - service
    ports:
      - "80:80"

  theatre-db:
    container_name: theatre-db
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - "${SQL_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres/database_dump.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    expose:
      - "${REDIS_PORT}"
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - redis_data:/data

  elasticsearch:
    build: elastic
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_PORT=${ES_PORT}
      - xpack.security.enabled=${ES_SECURITY}
    expose:
      - "${ES_PORT}"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - esdata:/usr/share/elasticsearch/data

  etl_pg_es:
    build: etl
    container_name: etl_pg_es
    env_file:
      - ./.env
    depends_on:
      theatre-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy


volumes:
  pgdata:
  static_files:
  redis_data:
  esdata:


